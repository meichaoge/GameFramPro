
2020/1/21
<1> 新增全局update tick模块 AppModuleTickManager。并整合UI update 回调方式
<2> 增加运行时CDN 下载图片并缓存的模块 RealtimeImageDownloadHelper
<3> 更新UIBasePage 基类，增加获取UI节点和按钮注册的虚方法
<4> 增加全局共享的LoadigMask 模块

2020/1/19
<1> 修复多语言LocalizaitonKeyComponent 自动序列化后无法保存的问题
<2> UIBasepage 添加update回调接口和调用

2020/1/17
<1> 添加吊炸天UI循环列表插件 EnhancedScroller v2 后续功能待优化
<2> 修改DebugLog 修复部分情况报错问题
<3> 增加自动弹窗管理组件并扩展UI 接口

2020/1/16
<1>扩展本地化工具 增加LocalizationKeyComponent 记录Key 并映射
<2> 更新切换语言时候界面更新逻辑
<3> 更新序列化、DateTime 转换、Tag 管理更新 接口

2020/1/13
<1> 修复Widget组件在页面关闭时候没有被正确的释放问题
<2> 扩展PlayerPrefab 保存和取出数据的接口
<3> 扩展Widget 创建和查询接口

2020/1/2
<1> 修复弹窗被强制关闭后无法再次打开的问题

2019/12/27
<1> 增加螺旋线接口
<2> 增加UI描边效果插件

2019/12/16
<1> 简化资源加载的接口 只留下同步和异步加载关联两个接口
<2> 优化资源引用管理处理逻辑，修复了在加载到资源后的回调中释放资源造成的资源读取异常问题

2019/12/15
<1> 更新引用计数管理，去除引用组件 ComponentReferenceAssetInfor 中延迟卸载的逻辑。改成每个模块自己管理自己的资源

2019/12/xx  
<1> 更新AsyncManager 提供更多接口
<2> 更新UI管理器，修复回退界面时候中途卡住问题
<3> 新增UIDynamicListHelper 

2019/11/20:11：00
<1> 修改了UI创建脚本，避免访问自身节点时候的异常
<2> 修复了UI弹窗关联到页面时候第二次无法正确关闭的问题

2019/11/17 18:00
<1> 修复Socket 接收数据时候如果长度小于8解析异常的bug

2019/11/16 22:30
<1>  新增分享脚本ShareTool
<2> 修改GameObject对象池实现
<3> 继续完善Tcp客户端
<4> 新增测试相机FOV

2019/11/16 16:00
<1> 重新整理了资源加载的逻辑和引用计数逻辑，优化结构和修复未发现的bug

2019/11/14 20:00
<1> 修复资源引用时候 ComponentReferenceAssetInfor 记录异常问题
<2>优化资源引用卸载的方式


2019/11/10 22:00
<1> 新增TCPClient 包装类 SuperTcpClient (没有完成)
<2> 去掉了StringBuffer 对象池和被依赖的组件脚本


2019/11/9 20:00
<1> 优化了项目对Json 的直接依赖
<2> 优化EventTrigger 类，新增非泛型方法调用泛型接口和通用的非泛型接口


2019/11/6 20:00
<1> 新增数据加解密 DataDecryptUtility

2019/11/6  11:00
<1> CSV 新增定义换行符，避免不同平台解析时候报错问题
<2> 扩展RectTransForm 新增参数来获取 RectTransform 偏移后的位置
<3>UnityGameObjectPool 对象池扩展接口, 增加带有参数的构造函数
<4> 实现一个从下到上的垂直布局 UIVerticalLoopScrollView (需要继续优化扩展)


2019/11/1 16:00
<1> LoopScrollRect  组件新增一个 IsCanMoveOnBundary接口，用于需要使用Clamped模式的替代方案
<2> 修复资源还没有达到释放条件时候被释放的Bug
<3> 扩展了RectTransform 的判断两个Rect 范围的问题

2019/10/31 14:00
<1> 优化了资源关联和加载接口 新增扩展接口方便资源加载
<2> 新增UI编辑器脚本
<3> 优化csv 读取接口，新增状态返回参数


2019/10/30 20:30
<1> 修改下载器，新增断点续传功能
<2> 新增提取精灵资源的编辑器
<3> UI 创建新增可选参数用于控制从哪个途径加载资源


2019/10/30 16:00
<1> 修改了Unity MenuItem 菜单路径名称，避免在Mac 上路径超过一定长度后Unity 无响应问题
<2> 优化了下载任务，增加自定义超时时间。修复下载Bug

2019/10/30 13:00
<1> 继续优化了更新流程。AssetBundle 新增跨版本更新方案
<2> 导入CshrpZip 压缩和解压dll 和 对应的工具库
<3> 优化了应用的配置数据类型

2019/10/29 20:00
<1> 修改了AssetBunble 打包机制，修改了AssetBundle 文件名为指定的组合名称(长度+CRC+MD5)
<2> 修改了AssetBundle 加载机制和更新机制
<3> 新增修改AssetBundle Name 的弹窗
<4> 修复了UI 加载和释放逻辑，并增加必要的日志记录

2019/10/28 : 22:00
<1> 完善了资源引用关系处理逻辑，增加资源卸载逻辑
<2> 修复资源配置序列化对象加载问题
<3> 修改了追踪资源的开关，默认关闭，并且开关被追踪系统自己控制

2019/10/27 22:00
<1> 重写了 资源管理和引用计数系统，简化资源加载的接口

2019/10/23 18:00
<1> 新增序列化资源 生成 .asset 配置项目
<2> 解决更新时候下载失败的错误处理逻辑
<3> 更新了图片导入格式处理逻辑和图片格式配置，Android 默认改成ETC2 ；IOS 默认改成ASTC 模式

2019/9/24 15:00
<1> 新增只读属性   [ReadOnly]
<2> 整理资源优化脚本


2019/9/24 14:00
<1> 增加资源引用关系查找编辑器组件
<2> 增加UIText 截断文本的扩展功能


2019/9/20 20:00
<1> 完成断线重连逻辑以及心跳包接收异常
<2> 扩展了Rect 相交方法，优化了 LoopCircleLayout 相关实现


2019/9/12 21:00
<1>  更新服务器接收数据模式
<2> 增加断开和重连 ，没有测试
 
2019/9/12 20:00
<1> 整理优化网络消息注册和监听机制
<2> 完成简单的登录网络消息发送和验证接收流程


2019/9/6 20:30
<1> 整理心跳包发送和追加头部信息逻辑
<2> 整理消息接收处理逻辑 和回调注册逻辑
<3 >开始测试登录逻辑
<4> 服务器新增json 和TCP 粘包处理

2019/9/5 20:30
<1> 整理了Socket 基类逻辑
<2> 重写消息接收对象和消息发送对象的逻辑
<3> 修改Tcp 心跳包为系统定时器触发，避免使用过多的子线程


2019/9/4 20:30
<1> 新增Socket 客户端基类 BaseSocketClient ，并重写了TCP和UDP 客户端
<2> 更新了TCP 心跳包逻辑 实现了定时发送心跳包
<3> 完善了ByteArray/SocketHead/SocketMessageData 的实现，并增加对应的对象池缓存机制
<4> 更新测试了SuperCortion 的逻辑，多线程下测试异常



2019/9/3 20:30
<1>新增协议命令id定义
<2> 增加解析数据中的命令id 功能，
<3> 新增Socket事件接口类，并在tcp 客户端中继承
<4> 新增网络数据的管理上层


2019/9/3 9:00
<1> 新增Byte 数组的对象池管理器
<2> TCP 客户端新增粘包和分包的处理逻辑

2019/9/1
<1> 新增Socket 消息管理组件 SocketMessageQueue 。
<2> 新增Socket 头SocketHead

2019/8/26
<1> 修复Tcp客户端无法连接服务器的Bug .手机端还是无法连接
<2> 开始了一个简单的TCP 心跳包管理器[HeartbeatManager]的逻辑

2019/8/25 22:00
<1> 继续完善TCP客户端和服务器的核心逻辑。服务器增加同时处理多个请求的的逻辑，客户端增加超时逻辑和异常处理
<2> 需要一个独立的心跳包逻辑要完善

2019/8/23 21：00
<1> 开始tcp客户端的编写

2019/8/22 17:00
<1> 完成udp 客户端的实现以及组播的测试。TODO 手机端没法接收组播消息，需要看看网上的解决方案。并且不再一个网段的没法接收组播消息


2019/8/21 21:00
<1> 完成 SimpleUdpClient 自定义udp 客户端的逻辑部分，能够实现发送消息和广播。但是组播目前有问题



2019/8/21 13:00
<1> 简单的一个自定义UDP客户端实现 没有办法接受数据 TODO

2019/8/19 17:00
<1> 新增UDP客户端的部分代码
<2> 整理目录结构 为后面增加服务器代码准备


2019/8/1916:00
<1> 完成预加载图片的功能测试和代码重构
<2> 修复了获取MD5 中的若干Bug 
<3> 修改了下载器计时回调，在每个计时器单例管理器中注册避免手动调用接口

2019/8/17 16:00
<1> 导入了 Fixe64 和 SRandom 两个用于帧同步的基础类 (TODO 这里的Fixe64 的精度不高，需要测试是否能用)
<> 导入查阅到的一个帧同步的实例工程 UnityPackages&Dll 中

2019/8/16 23:00
<1> 完善预加载图片下载器的逻辑，由于CDN上资源配置错误，无法继续测试
<2> 完善AssetBundle 更新逻辑，增加多次下载配置文件功能

2019/8/16 19:00
<1> 添加了Quaternion 测试场景加深对四元数接口的理解
<2> 新增 XluaCshrpBridge 类用于lua 中访问C# 的桥梁
<3> 新增获取当前堆栈信息的类 DebugUtility
<4> 新增图片资源的缓存管理器 AppTextureCacheManager 
<5> 新增 预加载图片的管理逻辑 PreLoadTextureManager

2019/8/15 18:00
<1> 新增三个UI布局样式(走马灯,循环列表,无限循环列表)
<2> 扩展了 RectTransform 类

2019/8/15 17:00
<1> 扩展了 Rect 的扩展接口方便进行计算
<2> 导入了本地化工具，支持 Text/Image/RectTransform 多语言配置
<3> 新增 UGUI 2019_1 版本的源码，放置在 UnityPackages&Dll 目录

2019/8/14 18:00
<1> 修改了EventTrigger 模块中的 移除事件时候递归卡死的 Bug , 移除了事件向下透传的机制
<2> 新增UI 网络测试模块和对应的接口，测试事件的转发机制

2019/8/14 15:00
<1> 参考插件Thread NinJa . 完成一个支持多线程调用的协程基类 SuperCoroutine，并修改了相应的 AsyncManager 类依赖  SuperCoroutine
<2> 根据 SuperCoroutine 修改了各个使用 CoroutineEx 的模块
<3> 删除插件 Thread NinJa .并导出到目录 UnityPackages&Dll 中


2019/8/10 19:00
<1> AsyncManager新增  InvokeRepeating和Invoke  接口，类似于MonoBehavior 中一样
<2> 修复 CoroutineEx 启动协程时候，对内部的任务也启动一个协程导致无法通过CoroutineEx 结束任务的Bug 
<3> 新增TimeTickUtility 组件 ，完成计时器的功能

2019/8/10 17:00
<1> 修改了 UIPageManager 缓存页面的逻辑，弹窗和页面都是单独缓存自己的子类
<2> 扩展 UIPageManager 中创建弹窗的逻辑，支持多个同名的弹窗实例的创建
<3> 导入插件DoTweenPro 

2019/8/9 23:00
<1>继续扩展和优化 UGUIComponentReference 组件，新增根据序列化组件设置Tag
<2> AsyncManager 新增延迟一段时间执行的接口 DelayAction
<3> 完善 UIGeneralTipPopWindow 功能
<4> 提供UI 显示等操作的公共类 UIPageHelpUtility


2019/8/9 20:48
<1> 修改完善了几个下载器的配置
<2> 修改了创建几种类型UI 的模板文件，增加自动获取 挂载了UGUIComponentReferenceEditor 组件的对象上的UI定义，并自动生成到脚本中
<3> 新增几个界面和资源 用于测试完整的流程
<4> 优化 UGUIComponentReference 的扩展菜单功能


2019/8/8 20:00
<1> 修改了下载任务类，修改对应的 Bug.
<2> 新增接口 IUpgradeModule  ,用于需要更新的模块提供模板
<3> 修改了AssetBundle 下载类的实现，继承自IUpgradeModule 并重新整理了下载流程，使用CoroutineEx 来协助完成整个更新流程
<4> 抽象出 AppUpgradeManager 类，负责管理应用中需要更新的模块

2019/8/7  23:11
<1>  修改了下载任务的基类，去掉了Tick 接口，改成CoroutineEx 协程
<2> 去掉了Tick任务状态 改成了协程去做 新增任务的状态枚举  TaskStateEum
<3> 优化了下载器，去掉缓存链表改成List . 优化了下载器的流程
<4> 修改了 AssetBundle 更新流程

2019/8/7
<1> 优化了 AsyncManager 管理器，使得异步协程不再依赖其他的类，可以单独使用
<2> 优化了CoroutineEx，增加了状态管理以及接口 WaitDone 的实现

2019/8/7
<1> 整理合并了Mono 单例模板类的实现，只留下一个 Single_Mono 基类
<2> 拆分了 ResourcesManager,将资源的加载逻辑移到了 ResourcesUtility 中，隐藏了实现
<3> 优化解决了加载相同资源时候会先卸载资源再加载的问题，预判的减少不必要的消耗
<4>  解决了卸载资源时候报错的 Bug


2019/8/6 
<1> 重构资源引用结构，将资源的引用内置到资源加载记录中，删除之前的ReferenceAssetAndRecord 组合引用和记录的脚本
<2> 优化ResourceManager 加载资源的接口
<3> 修复了资源引用计数混乱的问题

2019/8/5 
<1> 重新梳理了资源加载记录和引用资源的逻辑，隐藏了加载资源的记录，加载资源的接口只暴露组件引用的资源
<2>  扩展了ResourcesManager 中资源加载的接口的参数，并去掉了访问内部资源加载记录的接口，统一标准化接口

2019/8/5 
<1> 优化了加载的资源记录类的继承关河减少了类的数量方便管理
<2> 销毁对象时候加入了销毁引用资源的方法判断


2019/8/4
<1>修改了对象引用其他资源的实现，将每个对象引用信息挂载在GameObject 中,并建立了索引这个脚本的缓存 
<2> 创建对象时候新增接口字段，用于强制创建一个新的对象
